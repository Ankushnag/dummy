# Generated by Django 4.0.3 on 2022-10-19 06:29

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.IntegerField()),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('work_number_1', models.CharField(max_length=10)),
                ('work_number_2', models.CharField(max_length=10, null=True)),
                ('cell_number', models.CharField(max_length=10, null=True)),
                ('is_work_numer_1_valid', models.BooleanField(default=False)),
                ('typep_of_account', models.IntegerField(null=True)),
                ('profile_image', models.ImageField(null=True, upload_to='profile_pictures')),
                ('brokerage_name', models.CharField(max_length=100, null=True)),
                ('sales_persones_license', models.CharField(max_length=100, null=True)),
                ('agent_broker_license_title', models.CharField(max_length=100, null=True)),
                ('create_team', models.BooleanField(null=True)),
                ('team_name', models.CharField(max_length=50, null=True)),
                ('languages', models.JSONField()),
                ('linkedin_url', models.URLField(null=True)),
                ('twitter_url', models.URLField(null=True)),
                ('favebook_url', models.URLField(null=True)),
                ('instagram_url', models.URLField(null=True)),
                ('youtube', models.URLField(null=True)),
                ('personal_bio', ckeditor.fields.RichTextField(null=True)),
                ('is_profilepassword', models.BooleanField(null=True)),
                ('profile_password', models.CharField(max_length=10, null=True)),
                ('name_of_business_listing', models.CharField(max_length=100, null=True)),
                ('business_id', models.CharField(max_length=50, null=True)),
                ('addition_user', models.CharField(max_length=50)),
                ('number_user', models.IntegerField(null=True)),
                ('address_line_1', models.CharField(max_length=100, null=True)),
                ('address_line_2', models.CharField(max_length=100, null=True)),
                ('town_id', models.CharField(max_length=100)),
                ('state_id', models.CharField(max_length=100)),
                ('zip_code_id', models.CharField(max_length=6)),
                ('user_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.usertype')),
            ],
        ),
    ]
